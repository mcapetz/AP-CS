// *** Your name: Margaret Capetz
package ch6webcat;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;

public class CirclePainterWindow extends JFrame implements ActionListener { 
	
	private CirclePanel circlePanel;
	private CirclePanelListener circlePanelListener;
	private JTextField radiusTextField;
	
	public CirclePainterWindow() {
		circlePanel = new CirclePanel();
		circlePanelListener = new CirclePanelListener(circlePanel);
		radiusTextField = new JTextField(15);
		
		JPanel mainPanel = new JPanel();
		mainPanel.setLayout(new BorderLayout());
		mainPanel.add(circlePanel, BorderLayout.CENTER);
		
		// Create a panel for the buttons, label, and text field
		// and then add it in the south position.
		// Remember to add this as an ActionListener for the
		// buttons and text field.
		JButton removeRecentButton = new JButton("Remove Most Recent Circle");
		JButton removeAllButton = new JButton("Remove All Circles");
		JLabel radiusLabel = new JLabel("Radius: ");
		
		removeRecentButton.addActionListener(this);
		removeAllButton.addActionListener(this);
		radiusTextField.addActionListener(this);
		
		JPanel lowerPanel = new JPanel();
		lowerPanel.add(removeRecentButton);
		lowerPanel.add(removeAllButton);
		lowerPanel.add(radiusLabel);
		lowerPanel.add(radiusTextField);
		mainPanel.add(lowerPanel, BorderLayout.SOUTH);
		
		// The line "radiusTextField.selectAll();" will be helpful for completing your requirements. 
		// You can look up what it does. 
		// As for where it goes, think about which section of your code it would be most helpful in.
			
		JMenuBar menuBar = new JMenuBar();
		
		JMenu colorMenu = new JMenu("Color");
		JMenuItem red = new JMenuItem("Red");
		JMenuItem blue = new JMenuItem("Blue");
		JMenuItem green = new JMenuItem("Green");
		
		colorMenu.add(red);
		colorMenu.add(blue);
		colorMenu.add(green);
		
		red.addActionListener(this);
		blue.addActionListener(this);
		green.addActionListener(this);
		
		menuBar.add(colorMenu);
		
		//Create a Color menu for the menu bar with Red, Blue, and Green menu items.
		//Remember to add this as an ActionListener for the menu items.
		
		this.setContentPane(mainPanel);
		this.setJMenuBar(menuBar);

	}


	@Override
	public void actionPerformed(ActionEvent ev) {
		//write code to respond appropriately to all of the possible
		//ActionEvents generated by the menu items, buttons, and text field
		String s = ev.getActionCommand();
		
		if(s.equals("Red")) {
			circlePanelListener.setColorOfNewlyCreatedCircles(Color.RED);
		}
		else if(s.equals("Blue")){
			circlePanelListener.setColorOfNewlyCreatedCircles(Color.BLUE);	
		}
		else if(s.equals("Green")){
			circlePanelListener.setColorOfNewlyCreatedCircles(Color.GREEN);
		}
		
		else if(s.equals("Remove Most Recent Circle")){
			circlePanel.removeMostRecentCircle();
			circlePanel.repaint();
		}
		else if(s.equals("Remove All Circles")){
			circlePanel.removeAllCircles();
			circlePanel.repaint();
		}
		
		else if(radiusTextField.getText() != null) {
			int radius;
			String text = radiusTextField.getText();
			try {
				radius = Integer.parseInt(text);
				if(radius < 0) radiusTextField.setText("Must enter a positive integer");
				else circlePanelListener.setRadiusOfNewlyCreatedCircles(radius);
			} catch(Exception NumberFormatException) {
				radiusTextField.setText("Must enter a positive integer");
			}
			radiusTextField.selectAll();
		}
	}
	

}
